{"version":3,"file":"transactions-CPciDDPa.js","sources":["../../../.svelte-kit/adapter-node/chunks/transactions.js"],"sourcesContent":["import { d as db } from \"./db.js\";\nimport { format } from \"date-fns\";\nasync function getTransactions(params) {\n  const startDate = format(params.startDate ?? /* @__PURE__ */ new Date(), \"yyyy-MM-dd\");\n  const endDate = format(params.endDate ?? /* @__PURE__ */ new Date(), \"yyyy-MM-dd\");\n  const values = [params.idMember, startDate, endDate, params.limit, params.offset];\n  let where = \"\";\n  if (params.search && params.search != \"\") {\n    where += \" and (cast(id_transaksi as varchar) ilike $6 or nama_group_produk ilike $6 or produk ilike $6) \";\n    values.push(`%${params.search}%`);\n  }\n  if (params.status == \"waiting\") {\n    where += \" and (coalesce(i.status::int, 0) = 0 or coalesce(i.flag::int, 0) = 0) \";\n  } else if (params.status == \"pending\") {\n    where += \" and (coalesce(i.status::int, 0) = 2 and coalesce(i.flag::int, 0) = 1 and t.response_code <> '00')\";\n  } else if (params.status == \"success\") {\n    where += \" and (coalesce(i.status::int, 0) = 2 and coalesce(i.flag::int, 0) = 1 and t.response_code = '00')\";\n  }\n  const query = `select count(*) OVER() AS full_count, t.id_transaksi, t.id_member, i.id_invoice, t.nominal, t.response_code, t.transaction_date, \n\t\tmgp.nama_group_produk, mp.produk, i.status, i.flag \n    from transaksi t\n\t\tleft join invoice i on i.id_invoice = t.id_invoice \n    left join mt_produk mp on mp.id_produk = t.id_produk \n    left join mt_group_produk mgp on mgp.id_group_produk = mp.id_group_produk\n    where t.id_member = $1 and transaction_date between $2 and $3 ${where}\n    order by transaction_date desc, transaction_time desc limit $4 offset $5`;\n  const result = await db.query(query, values);\n  const data = result?.rows && result?.rows.length > 0 ? result?.rows : [];\n  const transactions = data.map((trx) => {\n    const statusTrx = trx.response_code;\n    const statusInvoice = trx.status;\n    const flagInvoice = trx.flag;\n    let status = \"waiting\";\n    if (statusInvoice == 2 && flagInvoice == 1) {\n      if (statusTrx == \"00\") {\n        status = \"success\";\n      } else {\n        status = \"pending\";\n      }\n    }\n    return {\n      idTransaksi: trx.id_transaksi,\n      idMember: trx.id_member,\n      idInvoice: trx.id_invoice,\n      groupProduk: trx.nama_group_produk,\n      produk: trx.produk,\n      nominal: trx.nominal,\n      tanggal: format(trx.transaction_date, \"yyyy-MM-dd\"),\n      status\n    };\n  });\n  return {\n    data: transactions,\n    count: data[0]?.full_count ?? 0\n  };\n}\nasync function getResumeTrx(idMember) {\n  const now = format(/* @__PURE__ */ new Date(), \"yyyy-MM-dd\");\n  let statusses = [\"waiting\", \"pending\", \"success\", \"totalnum\"];\n  let data = {};\n  for (let id = 0; id < statusses.length; id++) {\n    const status = statusses[id];\n    let where = \"\";\n    if (status == \"waiting\") {\n      where = \" and (coalesce(i.status::int, 0) = 0 or coalesce(i.flag::int, 0) = 0) \";\n    } else if (status == \"pending\") {\n      where = \" and (coalesce(i.status::int, 0) = 2 and coalesce(i.flag::int, 0) = 1 and t.response_code <> '00')\";\n    } else if (status == \"success\") {\n      where = \" and (coalesce(i.status::int, 0) = 2 and coalesce(i.flag::int, 0) = 1 and t.response_code = '00')\";\n    }\n    const query = `select count(*) as total, sum(nominal) as total_nominal from transaksi t\n\t\tleft join invoice i on i.id_invoice = t.id_invoice \n    where t.id_member = $1 and transaction_date = $2 ${where}`;\n    const result = await db.query(query, [idMember, now]);\n    if (status == \"totalnum\") {\n      Object.assign(data, { totalnum: result?.rows[0]?.total_nominal ?? 0 });\n    } else {\n      Object.assign(data, {\n        [status]: result?.rows[0]?.total ?? 0\n      });\n    }\n  }\n  return { ...data };\n}\nexport {\n  getResumeTrx as a,\n  getTransactions as g\n};\n"],"names":[],"mappings":"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"}