{"version":3,"file":"user-hL3JAx61.js","sources":["../../../.svelte-kit/adapter-node/chunks/user.js"],"sourcesContent":["import { d as db } from \"./db.js\";\nimport bcrypt from \"bcrypt\";\nasync function getUserById(id) {\n  const res = await db.query(\"select * from mt_member where id_member = $1\", [id]);\n  return res?.rows[0] ?? null;\n}\nasync function getUserByEmail(email) {\n  const res = await db.query(\"select * from mt_member where email = $1\", [email]);\n  return res?.rows[0] ?? null;\n}\nasync function createUser(params) {\n  try {\n    const res = await db.query(\n      \"insert into mt_member (email, email_verified, password, name, image) values ($1, $2, $3, $4, $5) returning id_member\",\n      [params.email, params.emailVerified, params.password ?? \"\", params.name, params.image]\n    );\n    return {\n      error: null,\n      data: res?.rows[0] ?? null\n    };\n  } catch (error) {\n    console.log(error);\n    if (error.code == 23505) {\n      return {\n        error: \"Email sudah terdaftar\",\n        data: null\n      };\n    }\n    return {\n      error: \"Terjadi kesalahan\",\n      data: null\n    };\n  }\n}\nasync function updateUser(params) {\n  try {\n    let needVerify = false;\n    const user = await db.query(\"select email from mt_member where id_member = $1\", [\n      params.idMember\n    ]);\n    if (!user) throw new Error(\"User tidak ditemukan\");\n    if (user.rows[0]?.email != params.email) {\n      needVerify = true;\n    }\n    const res = await db.query(\n      `update mt_member set name = $2, email = $3 ${needVerify ? \", email_verified = null\" : \"\"} where id_member = $1 returning id_member`,\n      [params.idMember, params.name, params.email]\n    );\n    return {\n      error: null,\n      data: res?.rows[0] ?? null\n    };\n  } catch (error) {\n    console.log(error);\n    if (error.code == 23505) {\n      return {\n        error: \"Email sudah terdaftar\",\n        data: null\n      };\n    }\n    return {\n      error: \"Terjadi kesalahan\",\n      data: null\n    };\n  }\n}\nasync function updatePassword(params) {\n  try {\n    const hashPassword = bcrypt.hashSync(params.password, 10);\n    const res = await db.query(\n      `update mt_member set password = $2 where id_member = $1 returning id_member`,\n      [params.idMember, hashPassword]\n    );\n    return {\n      error: null,\n      data: res?.rows[0] ?? null\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      error: error?.message,\n      data: null\n    };\n  }\n}\nasync function createSession(params) {\n  try {\n    const res = await db.query(\n      \"insert into sessions (user_id, expires, session_token, type, ip, device_info, host) values ($1, $2, $3, $4, $5, $6, $7)\",\n      [\n        params.userId,\n        params.expires,\n        params.sessionToken,\n        params.type,\n        params.ip,\n        params.deviceInfo,\n        params.host\n      ]\n    );\n    return {\n      error: null,\n      data: res?.rows[0] ?? null\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      error: \"Terjadi kesalahan\",\n      data: null\n    };\n  }\n}\nasync function getAccountByProvider(providerAccountId, provider) {\n  const res = await db.query(\n    \"select * from accounts a left join mt_member mm on mm.id_member = a.user_id where provider_account_id = $1 and provider = $2\",\n    [providerAccountId, provider]\n  );\n  return res?.rows[0] ?? null;\n}\nexport {\n  updatePassword as a,\n  createUser as b,\n  createSession as c,\n  getUserByEmail as d,\n  getAccountByProvider as e,\n  getUserById as g,\n  updateUser as u\n};\n"],"names":[],"mappings":"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"}